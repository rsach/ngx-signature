{"version":3,"file":"ngx-signature.js.map","sources":["ng://ngx-signature/lib/ngx-signature.service.ts","ng://ngx-signature/lib/ngx-signature.component.ts","ng://ngx-signature/lib/ngx-signature.directive.ts","ng://ngx-signature/lib/ngx-signature.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSignatureService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport * as SignaturePad from 'signature_pad';\nimport * as fx from 'glfx-es6';\nimport { Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material';\n\n\n\n// declare const $;\n\n@Component({\n  selector: 'ngx-signature',\n  template: `<div class=\"ngx-signature-modal\" id=\"ngx-signature\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">E-Sign</h4>\n            <button type=\"button\" class=\"close\" (click)=\"dialogRef.close()\">&times;</button>\n          </div>\n\n          <!-- Modal body -->\n          <div class=\"modal-body\">\n              <ul class=\"nav nav-tabs\" role=\"tablist\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" [ngClass]=\"selected_tab === 'draw' ? 'active' : ''\" (click)=\"activateDrawTab()\" role=\"tab\" > <i class=\"fa fa-edit\"></i> Draw</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" [ngClass]=\"selected_tab === 'camera' ? 'active' : ''\" (click)=\"activateCameraTab()\" role=\"tab\" > <i class=\"fa fa-camera\"></i> Snap</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" [ngClass]=\"selected_tab === 'upload' ? 'active' : ''\" (click)=\"activateUploadTab()\" role=\"tab\" > <i class=\"fa fa-image\"></i> Upload</a>\n                  </li>\n              </ul>\n              <div  [style.visibility]=\"selected_tab === 'draw' ? 'visible' : 'hidden'\" role=\"tabpanel\" class=\"tab-pane \" [ngClass]=\"selected_tab === 'draw' ? 'active' : 'fade'\" id=\"draw\">\n                  <span class=\"draw-text\">You can sign using your touchpad or mouse inside rectangular area</span>\n                  <canvas #signaturePad height=\"300\" width=\"470\" class=\"signature-pad\"></canvas>\n                  <button (click)=\"clearDrawing()\" class=\"btn btn-light\">Clear</button>\n                  <button (click)=\"doneDrawing()\" class=\"btn btn-primary pull-right\">\n                    Done\n                  </button>\n              </div>\n              <div [style.visibility]=\"selected_tab === 'upload' ? 'visible' : 'hidden'\" role=\"tabpanel\" class=\"tab-pane\" [ngClass]=\"selected_tab === 'upload' ? 'active' : 'fade'\" id=\"upload\">\n                  <div *ngIf=\"!selected\" class=\"upload\" [ngClass]=\"{'dragging' : dragging}\">\n                    <input type=\"file\" (change)=\"uploadFileChange($event)\" #fileUpload >\n                    <button *ngIf=\"!dragging\" class=\"btn\">\n                      <i class=\"fa fa-upload\"></i> Select a file to upload\n                    </button>\n                    <button *ngIf=\"dragging\" class=\"btn btn-light\">\n                      Drop file here to upload\n                    </button>\n                  </div>\n                  <div *ngIf=\"selected\" class=\"image\">\n                      <span class=\"crop-text\">Crop the image to the best fit</span>\n                      <image-cropper\n                        [imageChangedEvent]=\"uploadFileChangedEvent\"\n                        [maintainAspectRatio]=\"false\"\n                        format=\"png\"\n                        (imageCropped)=\"imageCropped($event)\"\n                        (imageLoaded)=\"imageLoaded()\"\n                        (loadImageFailed)=\"loadImageFailed()\"\n                      ></image-cropper>\n                      <br>\n                      <button (click)=\"doneCropping()\" class=\"btn btn-primary pull-right\">\n                        Done\n                      </button>\n                  </div>\n              </div>\n              <div [style.visibility]=\"selected_tab === 'camera' ? 'visible' : 'hidden'\" role=\"tabpanel\" class=\"tab-pane\" [ngClass]=\"selected_tab === 'camera' ? 'active' : 'fade'\" id=\"camera\">\n                  <div *ngIf=\"!selected\" class=\"capture\">\n                      <span class=\"camera-text\">Put signature near your camera and click on take snapshot</span>\n                      <canvas #cameraSnapshot height=\"300\" width=\"470\" style=\"display:none\"></canvas>\n\n                      <video  #camera height=\"300\" width=\"470\" class=\"signature-pad\"></video>\n                      <button class=\"btn btn-primary btn-block\" (click)=\"takeSnapshot()\">Take Snapshot</button>\n                  </div>\n                  <div *ngIf=\"selected\" class=\"capture\">\n                      <span class=\"crop-text\">Crop the image to the best fit</span>\n                      <image-cropper\n                        [imageBase64]=\"capturedImage\"\n                        [maintainAspectRatio]=\"false\"\n                        format=\"png\"\n                        (imageCropped)=\"imageCropped($event)\"\n                        (imageLoaded)=\"imageLoaded()\"\n                        (loadImageFailed)=\"loadImageFailed()\"\n                      ></image-cropper>\n                      <button (click)=\"retakeSnapshot()\" class=\"btn btn-light\">Retake Snapshot</button>\n\n                      <button (click)=\"doneCropping()\" class=\"btn btn-primary pull-right\">\n                        Done\n                      </button>\n                  </div>\n              </div>\n          </div>\n\n\n\n        </div>\n      </div>\n</div>\n`,\n  styles: [`.upload{margin-top:15px;margin-bottom:15px;padding:15px;width:100%;min-height:100px;border:2px dashed silver;text-align:center;display:flex;flex-direction:row;justify-content:center;align-items:center;position:relative}.upload input[type=file]{position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.upload.dragging{border:2px dashed #212121}:host image-cropper>.cropper{outline-color:rgba(1,1,1,.2)}.camera-text,.crop-text,.draw-text{display:block;text-align:center;padding-top:15px;padding-bottom:5px;font-size:14px}.tab-pane{display:none}.tab-pane.active{display:block}.signature-pad{border:1px solid #000;border-radius:5px}`]\n})\nexport class NgxSignatureComponent implements OnInit {\n  dragging = false;\n  selected = false;\n  uploadFileChangedEvent;\n  capturedImage;\n  croppedImage;\n\n  selected_tab = 'draw';\n\n  @Output() onSignatureDone: EventEmitter<string> = new EventEmitter<string>();\n\n  responseImage;\n  @ViewChild('fileUpload') fileInputField;\n  @ViewChild('signaturePad') signaturePadCanvas;\n  @ViewChild('camera') cameraElement;\n  @ViewChild('cameraSnapshot') cameraSnapshotCanvas;\n\n  signaturePad;\n  videoStream;\n  constructor(\n    public dialogRef: MatDialogRef<NgxSignatureComponent>,\n    // private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n\n    this.signaturePad = new SignaturePad.default(this.signaturePadCanvas.nativeElement);\n    // $('#ngx-signature').on('hidden.bs.modal',  () => {\n    //   this.resetModal();\n    // });\n    // $('#ngx-signature').on('show.bs.modal',  () => {\n    //   $('a[href=\\'#draw\\']').click();\n    // });\n  }\n\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    const files = evt.dataTransfer.files;\n    this.dragging = true;\n\n  }\n  @HostListener('dragleave', ['$event']) onDragLeave(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.dragging = false;\n  }\n  @HostListener('drop', ['$event']) public onDrop(evt) {\n    this.dragging = false;\n    console.log(evt);\n  }\n\n\n  uploadFileChange(e) {\n    if (this.validateFiles(e.target.files)){\n      this.selected = true;\n      this.uploadFileChangedEvent = e;\n    }\n  }\n  imageCropped(image: string) {\n    this.croppedImage = image;\n  }\n  imageLoaded() {\n      // show cropper\n  }\n  loadImageFailed() {\n      // show message\n  }\n\n  validateFiles(files) {\n    if (files.length) {\n        for (let i = 0 ; i < files.length; i++) {\n            if (!(files[i].type.match('image'))) {\n                alert('Invalid file! Only images are allowed.');\n                return false;\n            }\n            if ( ((files[i].size / 1024) / 1024) > 5) {\n                alert('Invalid file! File size exceeds 5 MB.');\n                return false;\n            }\n        }\n    }\n    return true;\n  }\n\n  doneCropping() {\n    this.responseImage = this.croppedImage;\n    // this.onSignatureDone.emit(this.responseImage);\n    this.dialogRef.close(this.responseImage);\n    // $('#ngx-signature').modal('hide');\n  }\n\n  doneDrawing() {\n    this.responseImage = this.signaturePad.toDataURL();\n    // this.onSignatureDone.emit(this.responseImage);\n    this.dialogRef.close(this.responseImage);\n\n    // $('#ngx-signature').modal('hide');\n  }\n\n\n  clearDrawing() {\n    if (this.signaturePad && this.signaturePad.clear) {\n      this.signaturePad.clear();\n    }\n  }\n\n  resetModal() {\n    // Clear Drawing section\n    this.clearDrawing();\n    // Clear Upload Section\n    this.uploadFileChangedEvent = null;\n    this.croppedImage = null;\n    this.selected = false;\n    // Clear snap section\n    this.stopVideoStream();\n  }\n\n  stopVideoStream() {\n    if (this.videoStream && this.videoStream.getTracks) {\n      const tracks = this.videoStream.getTracks();\n      for (const i in tracks) {\n        if (tracks[i] && tracks[i].stop) {\n          tracks[i].stop();\n        }\n      }\n    }\n    if (this.cameraElement && this.cameraElement.nativeElement) {\n      this.cameraElement.nativeElement.src = '';\n      if (this.cameraElement.nativeElement.pause) {\n        this.cameraElement.nativeElement.pause();\n      }\n    }\n\n  }\n\n  activateDrawTab() {\n    this.selected_tab = 'draw';\n    this.resetModal();\n  }\n\n  activateCameraTab() {\n    this.selected_tab = 'camera';\n\n    this.resetModal();\n\n    const browser = <any>navigator;\n    browser.getUserMedia = (\n      browser.getUserMedia ||\n      browser.webkitGetUserMedia ||\n      browser.mozGetUserMedia ||\n      browser.msGetUserMedia\n    );\n\n    browser.mediaDevices.getUserMedia({video : true, audio : false}).then(stream => {\n      this.videoStream = stream;\n      this.cameraElement.nativeElement.src = window.URL.createObjectURL(stream);\n      this.cameraElement.nativeElement.play();\n    });\n  }\n\n  activateUploadTab() {\n    this.selected_tab = 'upload';\n\n    this.resetModal();\n  }\n\n  takeSnapshot() {\n    this.cameraSnapshotCanvas\n      .nativeElement\n      .getContext('2d')\n      .drawImage(\n        this.cameraElement.nativeElement,\n        0,\n        0,\n        this.cameraSnapshotCanvas.nativeElement.width,\n        this.cameraSnapshotCanvas.nativeElement.height\n      );\n    this.stopVideoStream();\n    this.selected = true;\n    const c = fx.canvas();\n    const texture = c.texture(this.cameraSnapshotCanvas.nativeElement);\n    c.draw(texture)\n            .hueSaturation(-1, -1)// grayscale\n            .unsharpMask(20, 2)\n            .brightnessContrast(0.2, 0.9)\n            .update();\n    console.log(c);\n\n    this.capturedImage = c.toDataURL();\n  }\n\n  retakeSnapshot() {\n    this.resetModal();\n    this.activateCameraTab();\n  }\n}\n","import {Directive, EventEmitter, Host, HostListener, Output} from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {NgxSignatureComponent} from './ngx-signature.component';\n\n@Directive({\n  selector: '[appNgxSignature]'\n})\nexport class NgxSignatureDirective {\n\n  @Output() onSignatureDone: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(\n    private dialog: MatDialog\n  ) { }\n\n  @HostListener('click', ['$event']) openComponent(evt) {\n\n    this.dialog.open(NgxSignatureComponent, {\n      panelClass: 'transparent'\n    }).afterClosed().subscribe(res => {\n      // console.log()\n      if (res) {\n        this.onSignatureDone.emit(res);\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSignatureComponent } from './ngx-signature.component';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { NgxSignatureDirective } from './ngx-signature.directive';\nimport {MatDialogModule} from '@angular/material';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\n@NgModule({\n  imports: [\n    CommonModule,\n    ImageCropperModule,\n    MatDialogModule,\n    NoopAnimationsModule,\n    BrowserAnimationsModule\n  ],\n  declarations: [\n    NgxSignatureComponent,\n    NgxSignatureDirective\n  ],\n  exports: [\n    NgxSignatureComponent,\n    NgxSignatureDirective\n  ],\n  entryComponents: [\n    NgxSignatureComponent\n  ]\n})\nexport class NgxSignatureModule { }\n"],"names":["SignaturePad.default","fx.canvas"],"mappings":"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"}
