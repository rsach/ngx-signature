!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("@angular/core"),require("signature_pad"),require("glfx-es6"),require("@angular/material"),require("@angular/common"),require("ngx-image-cropper"),require("@angular/platform-browser/animations")):"function"==typeof define&&define.amd?define("ngx-signature",["exports","@angular/core","signature_pad","glfx-es6","@angular/material","@angular/common","ngx-image-cropper","@angular/platform-browser/animations"],a):a(e["ngx-signature"]={},e.ng.core,null,null,e.ng.material,e.ng.common,null,e.ng.platformBrowser.animations)}(this,function(e,a,t,n,i,o,r,s){"use strict";var l=t["default"],d=function(){function e(){}return e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),p=function(){function e(e){this.dialogRef=e,this.dragging=!1,this.selected=!1,this.selected_tab="draw",this.onSignatureDone=new a.EventEmitter}return e.prototype.ngOnInit=function(){this.signaturePad=new l(this.signaturePadCanvas.nativeElement)},e.prototype.onDragOver=function(e){e.preventDefault(),e.stopPropagation();e.dataTransfer.files;this.dragging=!0},e.prototype.onDragLeave=function(e){e.preventDefault(),e.stopPropagation(),this.dragging=!1},e.prototype.onDrop=function(e){this.dragging=!1,console.log(e)},e.prototype.uploadFileChange=function(e){this.validateFiles(e.target.files)&&(this.selected=!0,this.uploadFileChangedEvent=e)},e.prototype.imageCropped=function(e){this.croppedImage=e},e.prototype.imageLoaded=function(){},e.prototype.loadImageFailed=function(){},e.prototype.validateFiles=function(e){if(e.length)for(var a=0;a<e.length;a++){if(!e[a].type.match("image"))return alert("Invalid file! Only images are allowed."),!1;if(5<e[a].size/1024/1024)return alert("Invalid file! File size exceeds 5 MB."),!1}return!0},e.prototype.doneCropping=function(){this.responseImage=this.croppedImage,this.dialogRef.close(this.responseImage)},e.prototype.doneDrawing=function(){this.responseImage=this.signaturePad.toDataURL(),this.dialogRef.close(this.responseImage)},e.prototype.clearDrawing=function(){this.signaturePad&&this.signaturePad.clear&&this.signaturePad.clear()},e.prototype.resetModal=function(){this.clearDrawing(),this.uploadFileChangedEvent=null,this.croppedImage=null,this.selected=!1,this.stopVideoStream()},e.prototype.stopVideoStream=function(){if(this.videoStream&&this.videoStream.getTracks){var e=this.videoStream.getTracks();for(var a in e)e[a]&&e[a].stop&&e[a].stop()}this.cameraElement&&this.cameraElement.nativeElement&&(this.cameraElement.nativeElement.src="",this.cameraElement.nativeElement.pause&&this.cameraElement.nativeElement.pause())},e.prototype.activateDrawTab=function(){this.selected_tab="draw",this.resetModal()},e.prototype.activateCameraTab=function(){var a=this;this.selected_tab="camera",this.resetModal();var e=navigator;e.getUserMedia=e.getUserMedia||e.webkitGetUserMedia||e.mozGetUserMedia||e.msGetUserMedia,e.mediaDevices.getUserMedia({video:!0,audio:!1}).then(function(e){a.videoStream=e,a.cameraElement.nativeElement.src=window.URL.createObjectURL(e),a.cameraElement.nativeElement.play()})},e.prototype.activateUploadTab=function(){this.selected_tab="upload",this.resetModal()},e.prototype.takeSnapshot=function(){this.cameraSnapshotCanvas.nativeElement.getContext("2d").drawImage(this.cameraElement.nativeElement,0,0,this.cameraSnapshotCanvas.nativeElement.width,this.cameraSnapshotCanvas.nativeElement.height),this.stopVideoStream(),this.selected=!0;var e=n.canvas(),a=e.texture(this.cameraSnapshotCanvas.nativeElement);e.draw(a).hueSaturation(-1,-1).unsharpMask(20,2).brightnessContrast(.2,.9).update(),console.log(e),this.capturedImage=e.toDataURL()},e.prototype.retakeSnapshot=function(){this.resetModal(),this.activateCameraTab()},e.decorators=[{type:a.Component,args:[{selector:"ngx-signature",template:'<div class="ngx-signature-modal" id="ngx-signature">\n    <div class="modal-dialog">\n        <div class="modal-content">\n\n          \x3c!-- Modal Header --\x3e\n          <div class="modal-header">\n            <h4 class="modal-title">E-Sign</h4>\n            <button type="button" class="close" (click)="dialogRef.close()">&times;</button>\n          </div>\n\n          \x3c!-- Modal body --\x3e\n          <div class="modal-body">\n              <ul class="nav nav-tabs" role="tablist">\n                  <li class="nav-item">\n                    <a class="nav-link" [ngClass]="selected_tab === \'draw\' ? \'active\' : \'\'" (click)="activateDrawTab()" role="tab" > <i class="fa fa-edit"></i> Draw</a>\n                  </li>\n                  <li class="nav-item">\n                    <a class="nav-link" [ngClass]="selected_tab === \'camera\' ? \'active\' : \'\'" (click)="activateCameraTab()" role="tab" > <i class="fa fa-camera"></i> Snap</a>\n                  </li>\n                  <li class="nav-item">\n                    <a class="nav-link" [ngClass]="selected_tab === \'upload\' ? \'active\' : \'\'" (click)="activateUploadTab()" role="tab" > <i class="fa fa-image"></i> Upload</a>\n                  </li>\n              </ul>\n              <div  [style.visibility]="selected_tab === \'draw\' ? \'visible\' : \'hidden\'" role="tabpanel" class="tab-pane " [ngClass]="selected_tab === \'draw\' ? \'active\' : \'fade\'" id="draw">\n                  <span class="draw-text">You can sign using your touchpad or mouse inside rectangular area</span>\n                  <canvas #signaturePad height="300" width="470" class="signature-pad"></canvas>\n                  <button (click)="clearDrawing()" class="btn btn-light">Clear</button>\n                  <button (click)="doneDrawing()" class="btn btn-primary pull-right">\n                    Done\n                  </button>\n              </div>\n              <div [style.visibility]="selected_tab === \'upload\' ? \'visible\' : \'hidden\'" role="tabpanel" class="tab-pane" [ngClass]="selected_tab === \'upload\' ? \'active\' : \'fade\'" id="upload">\n                  <div *ngIf="!selected" class="upload" [ngClass]="{\'dragging\' : dragging}">\n                    <input type="file" (change)="uploadFileChange($event)" #fileUpload >\n                    <button *ngIf="!dragging" class="btn">\n                      <i class="fa fa-upload"></i> Select a file to upload\n                    </button>\n                    <button *ngIf="dragging" class="btn btn-light">\n                      Drop file here to upload\n                    </button>\n                  </div>\n                  <div *ngIf="selected" class="image">\n                      <span class="crop-text">Crop the image to the best fit</span>\n                      <image-cropper\n                        [imageChangedEvent]="uploadFileChangedEvent"\n                        [maintainAspectRatio]="false"\n                        format="png"\n                        (imageCropped)="imageCropped($event)"\n                        (imageLoaded)="imageLoaded()"\n                        (loadImageFailed)="loadImageFailed()"\n                      ></image-cropper>\n                      <br>\n                      <button (click)="doneCropping()" class="btn btn-primary pull-right">\n                        Done\n                      </button>\n                  </div>\n              </div>\n              <div [style.visibility]="selected_tab === \'camera\' ? \'visible\' : \'hidden\'" role="tabpanel" class="tab-pane" [ngClass]="selected_tab === \'camera\' ? \'active\' : \'fade\'" id="camera">\n                  <div *ngIf="!selected" class="capture">\n                      <span class="camera-text">Put signature near your camera and click on take snapshot</span>\n                      <canvas #cameraSnapshot height="300" width="470" style="display:none"></canvas>\n\n                      <video  #camera height="300" width="470" class="signature-pad"></video>\n                      <button class="btn btn-primary btn-block" (click)="takeSnapshot()">Take Snapshot</button>\n                  </div>\n                  <div *ngIf="selected" class="capture">\n                      <span class="crop-text">Crop the image to the best fit</span>\n                      <image-cropper\n                        [imageBase64]="capturedImage"\n                        [maintainAspectRatio]="false"\n                        format="png"\n                        (imageCropped)="imageCropped($event)"\n                        (imageLoaded)="imageLoaded()"\n                        (loadImageFailed)="loadImageFailed()"\n                      ></image-cropper>\n                      <button (click)="retakeSnapshot()" class="btn btn-light">Retake Snapshot</button>\n\n                      <button (click)="doneCropping()" class="btn btn-primary pull-right">\n                        Done\n                      </button>\n                  </div>\n              </div>\n          </div>\n\n\n\n        </div>\n      </div>\n</div>\n',styles:[".upload{margin-top:15px;margin-bottom:15px;padding:15px;width:100%;min-height:100px;border:2px dashed silver;text-align:center;display:flex;flex-direction:row;justify-content:center;align-items:center;position:relative}.upload input[type=file]{position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.upload.dragging{border:2px dashed #212121}:host image-cropper>.cropper{outline-color:rgba(1,1,1,.2)}.camera-text,.crop-text,.draw-text{display:block;text-align:center;padding-top:15px;padding-bottom:5px;font-size:14px}.tab-pane{display:none}.tab-pane.active{display:block}.signature-pad{border:1px solid #000;border-radius:5px}"]}]}],e.ctorParameters=function(){return[{type:i.MatDialogRef}]},e.propDecorators={onSignatureDone:[{type:a.Output}],fileInputField:[{type:a.ViewChild,args:["fileUpload"]}],signaturePadCanvas:[{type:a.ViewChild,args:["signaturePad"]}],cameraElement:[{type:a.ViewChild,args:["camera"]}],cameraSnapshotCanvas:[{type:a.ViewChild,args:["cameraSnapshot"]}],onDragOver:[{type:a.HostListener,args:["dragover",["$event"]]}],onDragLeave:[{type:a.HostListener,args:["dragleave",["$event"]]}],onDrop:[{type:a.HostListener,args:["drop",["$event"]]}]},e}(),c=function(){function e(e){this.dialog=e,this.onSignatureDone=new a.EventEmitter}return e.prototype.openComponent=function(e){var a=this;this.dialog.open(p,{panelClass:"transparent"}).afterClosed().subscribe(function(e){e&&a.onSignatureDone.emit(e)})},e.decorators=[{type:a.Directive,args:[{selector:"[appNgxSignature]"}]}],e.ctorParameters=function(){return[{type:i.MatDialog}]},e.propDecorators={onSignatureDone:[{type:a.Output}],openComponent:[{type:a.HostListener,args:["click",["$event"]]}]},e}(),g=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[o.CommonModule,r.ImageCropperModule,i.MatDialogModule,s.NoopAnimationsModule,s.BrowserAnimationsModule],declarations:[p,c],exports:[p,c],entryComponents:[p]}]}],e}();e.NgxSignatureService=d,e.NgxSignatureComponent=p,e.NgxSignatureModule=g,e.ɵa=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-signature.umd.min.js.map