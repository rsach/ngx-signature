{"__symbolic":"module","version":4,"metadata":{"NgxSignatureService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"NgxSignatureComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"ngx-signature","template":"<div class=\"ngx-signature-modal\" id=\"ngx-signature\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">E-Sign</h4>\n            <button type=\"button\" class=\"close\" (click)=\"dialogRef.close()\">&times;</button>\n          </div>\n\n          <!-- Modal body -->\n          <div class=\"modal-body\">\n              <ul class=\"nav nav-tabs\" role=\"tablist\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" [ngClass]=\"selected_tab === 'draw' ? 'active' : ''\" (click)=\"activateDrawTab()\" role=\"tab\" > <i class=\"fa fa-edit\"></i> Draw</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" [ngClass]=\"selected_tab === 'camera' ? 'active' : ''\" (click)=\"activateCameraTab()\" role=\"tab\" > <i class=\"fa fa-camera\"></i> Snap</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" [ngClass]=\"selected_tab === 'upload' ? 'active' : ''\" (click)=\"activateUploadTab()\" role=\"tab\" > <i class=\"fa fa-image\"></i> Upload</a>\n                  </li>\n              </ul>\n              <div  [style.visibility]=\"selected_tab === 'draw' ? 'visible' : 'hidden'\" role=\"tabpanel\" class=\"tab-pane \" [ngClass]=\"selected_tab === 'draw' ? 'active' : 'fade'\" id=\"draw\">\n                  <span class=\"draw-text\">You can sign using your touchpad or mouse inside rectangular area</span>\n                  <canvas #signaturePad height=\"300\" width=\"470\" class=\"signature-pad\"></canvas>\n                  <button (click)=\"clearDrawing()\" class=\"btn btn-light\">Clear</button>\n                  <button (click)=\"doneDrawing()\" class=\"btn btn-primary pull-right\">\n                    Done\n                  </button>\n              </div>\n              <div [style.visibility]=\"selected_tab === 'upload' ? 'visible' : 'hidden'\" role=\"tabpanel\" class=\"tab-pane\" [ngClass]=\"selected_tab === 'upload' ? 'active' : 'fade'\" id=\"upload\">\n                  <div *ngIf=\"!selected\" class=\"upload\" [ngClass]=\"{'dragging' : dragging}\">\n                    <input type=\"file\" (change)=\"uploadFileChange($event)\" #fileUpload >\n                    <button *ngIf=\"!dragging\" class=\"btn\">\n                      <i class=\"fa fa-upload\"></i> Select a file to upload\n                    </button>\n                    <button *ngIf=\"dragging\" class=\"btn btn-light\">\n                      Drop file here to upload\n                    </button>\n                  </div>\n                  <div *ngIf=\"selected\" class=\"image\">\n                      <span class=\"crop-text\">Crop the image to the best fit</span>\n                      <image-cropper\n                        [imageChangedEvent]=\"uploadFileChangedEvent\"\n                        [maintainAspectRatio]=\"false\"\n                        format=\"png\"\n                        (imageCropped)=\"imageCropped($event)\"\n                        (imageLoaded)=\"imageLoaded()\"\n                        (loadImageFailed)=\"loadImageFailed()\"\n                      ></image-cropper>\n                      <br>\n                      <button (click)=\"doneCropping()\" class=\"btn btn-primary pull-right\">\n                        Done\n                      </button>\n                  </div>\n              </div>\n              <div [style.visibility]=\"selected_tab === 'camera' ? 'visible' : 'hidden'\" role=\"tabpanel\" class=\"tab-pane\" [ngClass]=\"selected_tab === 'camera' ? 'active' : 'fade'\" id=\"camera\">\n                  <div *ngIf=\"!selected\" class=\"capture\">\n                      <span class=\"camera-text\">Put signature near your camera and click on take snapshot</span>\n                      <canvas #cameraSnapshot height=\"300\" width=\"470\" style=\"display:none\"></canvas>\n\n                      <video  #camera height=\"300\" width=\"470\" class=\"signature-pad\"></video>\n                      <button class=\"btn btn-primary btn-block\" (click)=\"takeSnapshot()\">Take Snapshot</button>\n                  </div>\n                  <div *ngIf=\"selected\" class=\"capture\">\n                      <span class=\"crop-text\">Crop the image to the best fit</span>\n                      <image-cropper\n                        [imageBase64]=\"capturedImage\"\n                        [maintainAspectRatio]=\"false\"\n                        format=\"png\"\n                        (imageCropped)=\"imageCropped($event)\"\n                        (imageLoaded)=\"imageLoaded()\"\n                        (loadImageFailed)=\"loadImageFailed()\"\n                      ></image-cropper>\n                      <button (click)=\"retakeSnapshot()\" class=\"btn btn-light\">Retake Snapshot</button>\n\n                      <button (click)=\"doneCropping()\" class=\"btn btn-primary pull-right\">\n                        Done\n                      </button>\n                  </div>\n              </div>\n          </div>\n\n\n\n        </div>\n      </div>\n</div>\n","styles":[".upload{margin-top:15px;margin-bottom:15px;padding:15px;width:100%;min-height:100px;border:2px dashed silver;text-align:center;display:flex;flex-direction:row;justify-content:center;align-items:center;position:relative}.upload input[type=file]{position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.upload.dragging{border:2px dashed #212121}:host image-cropper>.cropper{outline-color:rgba(1,1,1,.2)}.camera-text,.crop-text,.draw-text{display:block;text-align:center;padding-top:15px;padding-bottom:5px;font-size:14px}.tab-pane{display:none}.tab-pane.active{display:block}.signature-pad{border:1px solid #000;border-radius:5px}"]}]}],"members":{"onSignatureDone":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":116,"character":3}}]}],"fileInputField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":119,"character":3},"arguments":["fileUpload"]}]}],"signaturePadCanvas":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":120,"character":3},"arguments":["signaturePad"]}]}],"cameraElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":121,"character":3},"arguments":["camera"]}]}],"cameraSnapshotCanvas":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":122,"character":3},"arguments":["cameraSnapshot"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"NgxSignatureComponent"}]}]}],"ngOnInit":[{"__symbolic":"method"}],"onDragOver":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":142,"character":3},"arguments":["dragover",["$event"]]}]}],"onDragLeave":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":149,"character":3},"arguments":["dragleave",["$event"]]}]}],"onDrop":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":154,"character":3},"arguments":["drop",["$event"]]}]}],"uploadFileChange":[{"__symbolic":"method"}],"imageCropped":[{"__symbolic":"method"}],"imageLoaded":[{"__symbolic":"method"}],"loadImageFailed":[{"__symbolic":"method"}],"validateFiles":[{"__symbolic":"method"}],"doneCropping":[{"__symbolic":"method"}],"doneDrawing":[{"__symbolic":"method"}],"clearDrawing":[{"__symbolic":"method"}],"resetModal":[{"__symbolic":"method"}],"stopVideoStream":[{"__symbolic":"method"}],"activateDrawTab":[{"__symbolic":"method"}],"activateCameraTab":[{"__symbolic":"method"}],"activateUploadTab":[{"__symbolic":"method"}],"takeSnapshot":[{"__symbolic":"method"}],"retakeSnapshot":[{"__symbolic":"method"}]}},"NgxSignatureModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":7,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":9,"character":4},{"__symbolic":"reference","module":"ngx-image-cropper","name":"ImageCropperModule","line":10,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDialogModule","line":11,"character":4},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"NoopAnimationsModule","line":12,"character":4},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":13,"character":4}],"declarations":[{"__symbolic":"reference","name":"NgxSignatureComponent"},{"__symbolic":"reference","name":"ɵa"}],"exports":[{"__symbolic":"reference","name":"NgxSignatureComponent"},{"__symbolic":"reference","name":"ɵa"}],"entryComponents":[{"__symbolic":"reference","name":"NgxSignatureComponent"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":4,"character":1},"arguments":[{"selector":"[appNgxSignature]"}]}],"members":{"onSignatureDone":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":9,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":12,"character":20}]}],"openComponent":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":15,"character":3},"arguments":["click",["$event"]]}]}]}}},"origins":{"NgxSignatureService":"./lib/ngx-signature.service","NgxSignatureComponent":"./lib/ngx-signature.component","NgxSignatureModule":"./lib/ngx-signature.module","ɵa":"./lib/ngx-signature.directive"},"importAs":"ngx-signature"}